{"version":3,"sources":["assets/docker-logo.png","config/react-create-app.js","config/nodejs.js","config/rails.js","state.js","select-options/index.js","componets/Questions.js","componets/CodeSnippet.jsx","componets/CodeSnippetTemplate.jsx","componets/FilesTabs.js","config/index.js","componets/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","name","label","description","groups","title","questions","defaultValue","type","selectOptions","checked","value","tabs","fileName","template","mode","StateContext","createContext","initializeFormData","appMode","reduce","memo","group","forEach","question","undefined","reducer","state","payload","newState","form","console","log","StateProvider","initialState","children","Provider","useReducer","useStateValue","useContext","options","require","Question","dispatch","props","className","onChange","event","input","target","map","GroupQuestion","index","key","Questions","DownloadIcon","text","fileContent","encodeURIComponent","href","download","aria-hidden","CodeSnippet","codeSnippet","useState","codeSnippetState","setCodeSnippet","RegExp","test","modeMapping","data-clipboard-text","lineWrapping","theme","lineNumbers","codeMirrior","getValue","base64","utf8","templates","securityRender","document","alert","confirm","localStorage","Handlebars","arg1","arg2","fn","this","inverse","CodeSnippetTemplate","templateName","rest","templateText","decode","data","viewData","ejs","render","FilesTabs","nodejs","rails","Logo","src","logoImage","alt","width","height","Burger","role","aria-label","aria-expanded","data-target","GithubRibbon","data-ribbon","Navbar","active","toogleNavbar","selectedItem","setSelectedItem","onClickNavbatItem","AppModes","classNames","onClick","id","Object","entries","HeaderMessage","dangerouslySetInnerHTML","__html","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5f242cd7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/docker-logo.8817cfca.png\";","module.exports = {\n  name: 'react-create-app',\n  label: 'React',\n  description:\n    'Generate the necessary files to create a Dockerfile and Ngix configuration for <strong>React create app</strong>.',\n  groups: [\n    {\n      title: 'Versions',\n      questions: [\n        {\n          title: 'Nodejs version',\n          name: 'node_version',\n          defaultValue: '14-alpine',\n          type: 'select',\n          selectOptions: 'node-alpine'\n        },\n      ],\n    },\n    {\n      title: 'Package manager',\n      questions: [\n        {\n          title: 'npm',\n          name: 'javascrit_package_manager',\n          checked: 'checked',\n          value: 'npm',\n          type: 'radio',\n        },\n        {\n          title: 'yarn',\n          name: 'javascrit_package_manager',\n          value: 'yarn',\n          type: 'radio',\n        },\n      ],\n    },\n    {\n      title: 'Server config',\n      questions: [\n        {\n          name: 'server_conf',\n          title: 'Nginx static',\n          checked: 'checked',\n          value: 'nginx',\n          type: 'radio',\n        },\n        {\n          name: 'server_conf',\n          title: 'Nodejs static',\n          value: 'nodejs',\n          type: 'radio',\n        },\n      ],\n    },\n    {\n      title: 'Extra config',\n      questions: [\n        {\n          name: 'private_npm',\n          title: 'Npm private repository',\n          checked: false,\n          type: 'checkbox',\n        },\n      ],\n    },\n  ],\n  tabs: [\n    {\n      fileName: 'Dockerfile',\n      template: 'templates/react/Dockerfile',\n    },\n    {\n      fileName: '.dockerignore',\n      template: 'templates/react/dockerignore',\n    },\n    {\n      fileName: 'docker-compose.yml',\n      template: 'templates/react/docker-compose.yml',\n    },\n    {\n      fileName: 'nginx/conf.d/default.conf.template',\n      mode: 'nginx',\n      template: 'templates/react/nginx-default.conf',\n    },\n  ],\n};\n","module.exports = {\n  name: 'nodejs',\n  label: 'Nodejs',\n  description:\n    'Generate the necessary files to create Dockerfile for <strong>Nodejs server</strong>.',\n  groups: [\n    {\n      title: 'Versions',\n      questions: [\n        {\n          title: 'Nodejs version',\n          name: 'node_version',\n          defaultValue: '14-alpine',\n          type: 'select',\n          selectOptions: 'node-alpine'\n        },\n      ],\n    },\n    {\n      title: 'Package manager',\n      questions: [\n        {\n          title: 'npm',\n          name: 'javascrit_package_manager',\n          checked: 'checked',\n          value: 'npm',\n          type: 'radio',\n        },\n        {\n          title: 'yarn',\n          name: 'javascrit_package_manager',\n          value: 'yarn',\n          type: 'radio',\n        },\n      ],\n    },\n    {\n      title: 'Extra config',\n      questions: [\n        {\n          name: 'private_npm',\n          title: 'Npm private repository',\n          checked: false,\n          type: 'checkbox',\n        },\n        {\n          name: 'typescript',\n          title: 'Typescript',\n          checked: false,\n          type: 'checkbox',\n        },\n      ],\n    },\n  ],\n  tabs: [\n    {\n      fileName: 'Dockerfile',\n      template: 'templates/nodejs/Dockerfile.ejs',\n    },\n    {\n      fileName: '.dockerignore',\n      template: 'templates/nodejs/dockerignore.ejs',\n    },\n  ],\n};\n","module.exports = {\n  name: 'rails',\n  label: 'Rails',\n  description:\n    'Generate the necessary files to dockerize a <strong>Rails server</strong>.',\n  groups: [\n    {\n      title: 'Versions',\n      questions: [\n        {\n          title: 'Ruby version',\n          name: 'ruby_version',\n          defaultValue: '2.5.6-slim',\n          type: 'select',\n          selectOptions: 'ruby-slim'\n        },\n        {\n          title: 'Nodejs version',\n          name: 'node_version',\n          defaultValue: '10.16.3',\n          type: 'text',\n        },\n      ],\n    },\n    {\n      title: 'Package manager',\n      questions: [\n        {\n          title: 'npm',\n          name: 'javascrit_package_manager',\n          checked: 'checked',\n          value: 'npm',\n          type: 'radio',\n        },\n        {\n          title: 'yarn',\n          name: 'javascrit_package_manager',\n          value: 'yarn',\n          type: 'radio',\n        },\n        {\n          title: 'Asset pipeline (Sprockets)',\n          name: 'javascrit_package_manager',\n          value: 'asset_pipeline',\n          type: 'radio',\n        },\n      ],\n    },\n    {\n      title: 'Database',\n      questions: [\n        {\n          name: 'database',\n          label: 'postgresql',\n          title: 'postgresql',\n          checked: 'checked',\n          value: 'postgresql',\n          type: 'radio',\n        },\n        {\n          name: 'database',\n          label: 'mysql',\n          title: 'mysql',\n          value: 'mysql',\n          type: 'radio',\n        },\n      ],\n    },\n    {\n      title: 'Extra config',\n      questions: [\n        {\n          name: 'rails_worker',\n          title: 'Sidekiq workers',\n          checked: true,\n          type: 'checkbox',\n        },\n        {\n          name: 'github_private',\n          title: 'Github token for private gems?',\n          checked: false,\n          type: 'checkbox',\n        },\n        {\n          name: 'private_npm',\n          title: 'Npm private repository',\n          checked: false,\n          type: 'checkbox',\n        },\n      ],\n    },\n  ],\n  tabs: [\n    {\n      fileName: 'Dockerfile',\n      template: 'templates/rails/Dockerfile.ejs',\n    },\n    {\n      fileName: 'docker-compose.yml',\n      template: 'templates/rails/docker-compose.yml',\n    },\n    {\n      fileName: '.dockerignore',\n      template: 'templates/rails/dockerignore',\n    },\n  ],\n};\n","import React, { createContext, useContext, useReducer } from 'react';\n\nexport const StateContext = createContext();\n\nexport const initializeFormData = (appMode) => {\n  return appMode.groups.reduce((memo, group) => {\n    group.questions.forEach((question) => {\n      if (question.defaultValue !== undefined) {\n        memo[question.name] = question.defaultValue;\n      } else if (question.checked !== undefined) {\n        memo[question.name] = question.value || question.checked;\n      }\n    });\n\n    return memo;\n  }, {});\n};\n\nconst reducer = (state, payload) => {\n  const newState = {\n    ...state,\n    form: payload.form || state.form,\n    appMode: payload.appMode || state.appMode,\n  };\n  console.log('Payload', payload);\n  console.log('New state', newState);\n  return newState;\n};\n\nexport const StateProvider = ({ initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","export const options = {\n  'node-alpine': require('./node-alpine.json'),\n  'ruby-slim': require('./ruby-slim.json'),\n}\n","import React from 'react';\nimport { useStateValue } from '../state';\nimport { options } from '../select-options'\n\nconst Question = ({ name, title, type, value, selectOptions }) => {\n  const [{ form }, dispatch] = useStateValue();\n  const props = {};\n  if (type === 'radio') {\n    props.value = value;\n  } else {\n    props.value = form[name];\n  }\n\n  return (\n    <li>\n      <p>{title}</p>\n      { type === 'select'\n      ? <select className='select' name={name} onChange={(event) => {\n        const input = event.target;\n        dispatch({\n          form: {\n            ...form,\n            [input.name]: input.value,\n          },\n        });\n      }}>\n        {options[selectOptions].map(name => {\n          return <option value={name} >{name}</option>\n        })}\n      </select>\n      : <input\n            {...props}\n            type={type}\n            name={name}\n            checked={type === 'checkbox' ? form[name] : value === form[name]}\n            onChange={(event) => {\n              const input = event.target;\n              dispatch({\n                form: {\n                  ...form,\n                  [input.name]: type === 'checkbox' ? !!input.checked : input.value,\n                },\n              });\n            }}\n            className=\"inputText\"\n          />}\n\n    </li>\n  );\n};\n\nexport const GroupQuestion = ({ title, questions }) => (\n  <div className=\"Card\">\n    <div className=\"CardTitle\">{title}</div>\n    <ul className=\"CardBody\">\n      {questions.map((question, index) => (\n        <Question key={`${question.name}-${index}`} {...question} />\n      ))}\n    </ul>\n  </div>\n);\n\nexport const Questions = () => {\n  const [{ appMode }] = useStateValue();\n  return (\n    <div className=\"columns is-multiline\">\n      {appMode.groups.map((question, index) => (\n        <div key={`${question.name}-${index}`} className=\"column is-half\">\n          <GroupQuestion {...question} />\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport Clipboard from 'react-clipboard.js';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/mode/nginx/nginx'\nimport 'codemirror/mode/dockerfile/dockerfile'\nimport 'codemirror/mode/yaml/yaml'\nimport { useStateValue } from '../state';\n\nconst modeMapping = (fileName) => {\n  if (new RegExp('\\.(yaml|yml)').test(fileName)){\n    return 'yaml'\n  }\n  if (fileName === 'Dockerfile') {\n    return 'dockerfile'\n  }\n  return 'text'\n}\n\nconst DownloadIcon = ({ fileName = 'snippet', text }) => {\n  const fileContent = encodeURIComponent(text);\n\n  return (\n    <a\n      className=\"link-icon-rounded\"\n      href={`data:none/plain;charset=utf-8,${fileContent}`}\n      download={fileName}\n    >\n      <i className=\"fa fa-download\" aria-hidden=\"true\"></i>\n    </a>\n  );\n};\n\nexport const CodeSnippet = ({ mode, template, fileName }) => {\n  const [{ form }] = useStateValue();\n  const codeSnippet = template(form);\n  const [codeSnippetState, setCodeSnippet] = useState(codeSnippet);\n  mode = mode || modeMapping(fileName)\n  return (\n    <>\n      <div className=\"code-actions-container\">\n        <DownloadIcon fileName={fileName} text={codeSnippet} />\n        <Clipboard\n          className=\"button-icon-rounded\"\n          data-clipboard-text={codeSnippetState}\n        >\n          <i className=\"fa fa-clipboard\" aria-hidden=\"true\"></i>\n        </Clipboard>\n      </div>\n      <CodeMirror\n        value={codeSnippet}\n        options={{\n          mode,\n          lineWrapping: true,\n          theme: 'dracula',\n          lineNumbers: true,\n        }}\n        onChange={(codeMirrior) => {\n          setCodeSnippet(codeMirrior.getValue());\n        }}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport ejs from 'ejs';\nimport * as Handlebars from 'handlebars';\nimport { CodeSnippet } from './CodeSnippet';\nconst base64 = require('base-64');\nconst utf8 = require('utf8');\nconst templates = require('../templates.json');\nconst templateFolder = 'templates'\nconst securityRender = {\n  document: {},\n  alert: () => {},\n  confirm: () => {},\n  localStorage: () => {},\n};\n\nHandlebars.registerHelper('ifEquals', function (arg1, arg2, options) {\n  return arg1 == arg2 ? options.fn(this) : options.inverse(this);\n});\n\nfunction decode64(text) {\n  return utf8.decode(base64.decode(text));\n}\n\nexport const CodeSnippetTemplate = ({ fileName, templateName, ...rest }) => {\n  if (!templates[templateName]) {\n    return <h1>Not found template: {templateName}</h1>;\n  }\n\n  const templateText = decode64(templates[templateName])\n  return (\n    <CodeSnippet\n      {...rest}\n      fileName={fileName}\n      template={(data) => {\n        const viewData = { ...data, ...securityRender };\n        if (/\\.ejs/.test(templateName)) {\n          return ejs.render(templateText, viewData);\n        } else {\n          return Handlebars.compile(templateText)(viewData);\n        }\n      }}\n    />\n  );\n};\n\n\n// ejs client render with include\n","import React from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\nimport { CodeSnippetTemplate } from './CodeSnippetTemplate';\nimport { useStateValue } from '../state';\n\nimport 'react-tabs/style/react-tabs.css';\n\nexport const FilesTabs = () => {\n  const [{ appMode }] = useStateValue();\n\n  return (\n    <Tabs>\n      <TabList>\n        {appMode.tabs.map(({ fileName }, index) => (\n          <Tab key={`${fileName}-${index}`}>{fileName}</Tab>\n        ))}\n      </TabList>\n      {appMode.tabs.map(({ template: templateName, ...rest }, index) => (\n        <TabPanel key={`${templateName}-${index}`}>\n          <CodeSnippetTemplate {...{ templateName, ...rest }} />\n        </TabPanel>\n      ))}\n    </Tabs>\n  );\n};\n","export default {\n  'react-create-app': require('./react-create-app'),\n  nodejs: require('./nodejs'),\n  rails: require('./rails'),\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport AppModes from '../config';\nimport { useStateValue, initializeFormData } from '../state';\nimport '../assets/gh-fork-ribbon.css';\nimport logoImage from '../assets/docker-logo.png';\n\nconst Logo = () => (\n  <img src={logoImage} alt=\"docker-logo\" width={50} height={50} />\n);\n\nconst Burger = (props) => (\n  <a\n    role=\"button\"\n    aria-label=\"menu\"\n    aria-expanded=\"false\"\n    data-target=\"navbarBasicExample\"\n    {...props}\n  >\n    <span aria-hidden=\"true\" />\n    <span aria-hidden=\"true\" />\n    <span aria-hidden=\"true\" />\n  </a>\n);\n\nconst GithubRibbon = () => (\n  <a\n    className=\"github-fork-ribbon is-hidden-touch\"\n    href=\"https://github.com/MiguelSavignano/docker-app-generator\"\n    data-ribbon=\"Fork me on GitHub\"\n    title=\"Fork me on GitHub\"\n  >\n    Fork me on GitHub\n  </a>\n);\n\nexport const Navbar = () => {\n  const [{ appMode }, dispatch] = useStateValue();\n  const [active, toogleNavbar] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(appMode.label);\n\n  const onClickNavbatItem = ({ name, label }) => () => {\n    const form = initializeFormData(AppModes[name]);\n    setSelectedItem(label);\n    dispatch({ form, appMode: AppModes[name] });\n  };\n\n  return (\n    <nav\n      className=\"navbar is-fixed-top is-link test\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"navbar-brand\">\n        <a className=\"navbar-item\" href=\"/\">\n          <Logo />\n        </a>\n        <Burger\n          className={classNames('navbar-burger burger', {\n            'is-active': active,\n          })}\n          onClick={() => toogleNavbar(!active)}\n        />\n      </div>\n      <div\n        id=\"navbarBasicExample\"\n        className={classNames('navbar-menu', {\n          'is-active': active,\n        })}\n      >\n        <div className=\"navbar-start\">\n          {Object.entries(AppModes).map(([file, { name, label }]) => (\n            <a\n              key={label}\n              className={classNames('navbar-item', {\n                'is-active': selectedItem === label,\n              })}\n              onClick={onClickNavbatItem({ name, label })}\n            >\n              {label}\n            </a>\n          ))}\n        </div>\n      </div>\n      <div className=\"navbar-end\">\n        <div className=\"navbar-item\">\n          <GithubRibbon />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport { Questions } from './componets/Questions';\nimport { FilesTabs } from './componets/FilesTabs';\nimport { Navbar } from './componets/Navbar';\nimport AppModes from './config';\nimport { StateProvider, initializeFormData, useStateValue } from './state';\nimport './assets/App.css';\nimport './assets/vendor/font-awesome-4.7.0/css/font-awesome.css';\n\nfunction App() {\n  const DEFAULT_APP = 'react-create-app';\n\n  const initialState = {\n    form: initializeFormData(AppModes[DEFAULT_APP]),\n    appMode: AppModes[DEFAULT_APP],\n  };\n  console.log('initialState', initialState);\n\n  return (\n    <StateProvider initialState={initialState}>\n      <div className=\"Navbar\">\n        <Navbar />\n      </div>\n      <div className=\"columns\">\n        <div className=\"section column\">\n          <HeaderMessage />\n          <div className=\"columns\">\n            <div className=\"column is-half\">\n              <Questions />\n            </div>\n            <div className=\"column is-half\">\n              <FilesTabs />\n            </div>\n          </div>\n        </div>\n      </div>\n    </StateProvider>\n  );\n}\n\nexport const HeaderMessage = () => {\n  const [{ appMode }] = useStateValue();\n\n  if (appMode.description) {\n    return (\n      <div\n        className=\"notification\"\n        dangerouslySetInnerHTML={{ __html: appMode.description }}\n      ></div>\n    );\n  }\n\n  return (\n    <div className=\"notification\">\n      Generate the necessary files to dockerize a{' '}\n      <strong>{appMode.label} </strong>.\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}